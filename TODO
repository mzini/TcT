*) 6.9.2010

tct -a rc -t 60 -s "wdg (matrix :dim 2 :bits 3)" -p \#3.10.trs

liefert interpretationen für die gesamte signatur auf einzelnen pfaden, was
durchaus verwirrend sein kann ...

*) 9.9.2010

ein ähnliches beispiel ist das folgende; wieso wird hier 
eine SLI ausgegeben, wenn keine nötig ist?

      The usable rules for this path are empty.
      
        We have oriented the usable rules with the following strongly linear interpretation:
          Interpretation Functions:
           g(x1, x2) = [0] x1 + [0] x2 + [0]
           s(x1) = [0] x1 + [0]
           f(x1, x2, x3) = [0] x1 + [0] x2 + [0] x3 + [0]
           f^#(x1, x2, x3) = [0] x1 + [0] x2 + [0] x3 + [0]
           c_0(x1) = [0] x1 + [0]
           g^#(x1, x2) = [0] x1 + [0] x2 + [0]
           c_1(x1) = [0] x1 + [0]
           c_2(x1) = [0] x1 + [0]

*) 9.9.2010

die pfadanalyse ist sub-optimal, siehe email; eigentlich müssten wir CaT auf den duplizierenden beispielen locker abhängen.

*) 10.9.2010

die strategie, bezeichnung 'weight gap principle' ist irreführend, hier wird das 'derivational gap principle' verwendet, dass sich direkt auf relative rewriting bezieht; das 'weight gap principle' bezieht sich auf runtime complexity und hier soll eine neue technik implementiert werden.